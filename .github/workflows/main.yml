name: ci

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'
    branches:
      - 'master'

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push development container image (alpine)
        uses: docker/build-push-action@v2
        with:
          context: ./alpine
          file: ./alpine/Dockerfile
          platforms: linux/amd64, linux/arm, linux/arm64, linux/ppc64le, linux/s390x
          push: true
          tags: |
            binaryless/alpine:latest
            binaryless/alpine:${{ github.sha }}-${{ github.run_id }}
            ghcr.io/mozillazg/binaryless/alpine:latest
      -
        name: Build and push development container image (debian)
        uses: docker/build-push-action@v2
        with:
          context: ./debian
          file: ./debian/Dockerfile
          platforms: linux/amd64, linux/arm, linux/arm64, linux/ppc64le, linux/s390x
          push: true
          tags: |
            binaryless/debian:latest
            binaryless/debian:${{ github.sha }}-${{ github.run_id }}
            ghcr.io/mozillazg/binaryless/debian:latest
      - name: test
        run: |
          set -xe

          images=(binaryless/alpine:latest ghcr.io/mozillazg/binaryless/alpine:latest binaryless/debian:latest ghcr.io/mozillazg/binaryless/debian:latest)
          for name in ${images[@]}; do
            docker manifest inspect ${name} | jq '.manifests[].platform'
          done

      - name: Run Trivy vulnerability scanner (alpine)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'binaryless/alpine:${{ github.sha }}-${{ github.run_id }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true

      - name: Run Trivy vulnerability scanner (debian)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'binaryless/debian:${{ github.sha }}-${{ github.run_id }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true

      -
        name: Build and push stable container image (alpine)
#        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: docker/build-push-action@v2
        with:
          context: ./alpine
          file: ./alpine/Dockerfile
          platforms: linux/amd64, linux/arm, linux/arm64, linux/ppc64le, linux/s390x
          push: true
          tags: |
            binaryless/alpine:latest
            binaryless/alpine:3.13
            ghcr.io/mozillazg/binaryless/alpine:latest
      -
        name: Build and push development container image (debian)
#        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: docker/build-push-action@v2
        with:
          context: ./debian
          file: ./debian/Dockerfile
          platforms: linux/amd64, linux/arm, linux/arm64, linux/ppc64le, linux/s390x
          push: true
          tags: |
            binaryless/debian:latest
            binaryless/debian:10
            ghcr.io/mozillazg/binaryless/debian:latest

      - name: Run Trivy vulnerability scanner (alpine)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'binaryless/alpine:3.13'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true

      - name: Run Trivy vulnerability scanner (debian)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'binaryless/debian:10'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
